{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/clientes.service.ts","webpack:///src/app/clientes/cliente.ts","webpack:///src/app/clientes/clientes-form/clientes-form.component.ts","webpack:///src/app/clientes/clientes-form/clientes-form.component.html","webpack:///src/app/clientes/clientes-list/clientes-list.component.ts","webpack:///src/app/clientes/clientes-list/clientes-list.component.html","webpack:///src/app/clientes/clientes-routing.module.ts","webpack:///src/app/clientes/clientes.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/servico.service.ts","webpack:///src/app/servico/servico-form/servico-form.component.ts","webpack:///src/app/servico/servico-form/servico-form.component.html","webpack:///src/app/servico/servico-list/servico-list.component.ts","webpack:///src/app/servico/servico-list/servico-list.component.html","webpack:///src/app/servico/servico-routing.module.ts","webpack:///src/app/servico/servico.module.ts","webpack:///src/app/servico/servico.ts","webpack:///src/app/template/navbar/navbar.component.ts","webpack:///src/app/template/navbar/navbar.component.html","webpack:///src/app/template/sidebar/sidebar.component.ts","webpack:///src/app/template/sidebar/sidebar.component.html","webpack:///src/app/template/template.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ClientesService","http","apiURL","apiURLBase","deletar","salvar","cliente","post","getClientes","get","getClienteByID","Atualizar","put","providedIn","Cliente","ClientesFormComponent","service","router","activetedRoute","success","mensagem","ngOnInit","params","subscribe","urlParams","resposta","onSubmit","alert","voltar","navigate","ClientesListComponent","clientes","carregarClientes","cadastrarCliente","preDelete","clienteSelecionado","deletarCliente","console","log","nome","erro","redirectTo","pathMatch","ClientesRoutingModule","forChild","ClientesModule","HomeComponent","LayoutComponent","ngAfterViewInit","$","window","location","href","each","addClass","on","preventDefault","toggleClass","LoginComponent","userName","password","preCadastro","event","cadastrando","cancelaCadastro","ServicoService","servico","getServicos","buscar","mes","httpParams","set","toString","url","ServicoFormComponent","clienteService","servicoService","ServicoListComponent","servicos","meses","carregarServicos","cadastrarServico","servicoSelecionado","consultar","undefined","lista","populaBusca","list","servicosCarregados","servicoModel","forEach","item","descricao","data","valor","idCliente","push","ServicoRoutingModule","ServicoModule","Servico","NavbarComponent","SidebarComponent","TemplateModule","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { LayoutComponent } from './layout/layout.component';\n\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: '', component: LayoutComponent, children: [\n    {path : 'home', component: HomeComponent}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AfterViewInit, Component } from '@angular/core';\n\nimport jQuery from 'jquery';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n    title = 'clientes-app-angular';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TemplateModule } from './template/template.module';\nimport { HomeComponent } from './home/home.component';\nimport { ClientesModule } from './clientes/clientes.module';\nimport { ClientesService } from './clientes.service';\nimport { ServicoModule } from './servico/servico.module';\nimport { ServicoService } from './servico.service';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { LayoutComponent } from './layout/layout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    LayoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    TemplateModule,\n    ClientesModule,\n    ServicoModule,\n    FormsModule\n  ],\n  providers: [\n    ClientesService,\n    ServicoService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Cliente } from './clientes/cliente';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  apiURL: string = environment.apiURLBase + '/api/clientes';\n  \n  \n  deletar(id: number): Observable<any> {\n    return this.http.delete<any>(`${this.apiURL}/${id}`);\n  }\n\n  constructor(private http: HttpClient) { }\n\n  salvar(cliente: Cliente): Observable<Cliente> {\n    return this.http.post<Cliente>(`${this.apiURL}`, cliente);\n  }\n\n\n  getClientes(): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(this.apiURL);  \n  }\n\n  getClienteByID(id: number): Observable<Cliente> {\n    return this.http.get<any>(`${this.apiURL}/${id}`);\n  }\n\n  Atualizar(cliente: Cliente): Observable<Cliente> {\n    return this.http.put<any>(`${this.apiURL}/${cliente.id}`, cliente);\n  }\n\n}\n","export class Cliente {\r\n    id: number;\r\n    nome: string;\r\n    cpf: string;\r\n    dataCadastro: string;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Cliente } from '../cliente';\nimport { ClientesService } from 'src/app/clientes.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-clientes-form',\n  templateUrl: './clientes-form.component.html',\n  styleUrls: ['./clientes-form.component.css']\n})\nexport class ClientesFormComponent implements OnInit {\n\n\n  cliente: Cliente;\n  success: boolean = false;\n  mensagem: boolean = false;\n  id: number;\n\n  constructor(private service: ClientesService,\n    private router: Router,\n    private activetedRoute: ActivatedRoute) {\n    this.cliente = new Cliente();\n    this.mensagem = false;\n  }\n\n  ngOnInit(): void {\n    let params: Observable<Params> = this.activetedRoute.params;\n    params.subscribe(urlParams => {\n      this.id = urlParams['id'];\n      this.service.getClienteByID(this.id)\n      .subscribe(\n        resposta => this.cliente = resposta)\n    })\n  }\n\n  onSubmit() {\n    if (this.id) {\n      this.service.Atualizar(this.cliente)\n      .subscribe(resposta => {\n        alert('cliente atualizado com sucesso.')\n        this.voltar();\n      })\n      \n\n    } else {\n      this.service.salvar(this.cliente)\n        .subscribe(resposta => {\n          this.voltar();\n          if (resposta == null) {\n            this.success = false;\n            this.mensagem = true;\n          }\n          this.success = true;\n          this.mensagem = true;\n          this.cliente = resposta;\n        })\n    }\n\n  }\n\n  voltar() {\n    this.router.navigate(['clientes/list']);\n  }\n\n}\n","<h1 class=\"mt-4\">Clientes</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">{{ cliente.id ? 'Edição' : 'Cadastro'}}</li>\n</ol>\n\n<div class=\"container\">\n    <form #clienteForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success && mensagem\">\n                    Cliente salvo/atualizado com sucesso.\n                  </div>\n                  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"!success && mensagem\">\n                    Erro ao tentar gravar/atualiar Cliente.\n                  </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>ID:</label>\n                    <input type=\"text\" class=\"form-control\" disabled=\"true\"\n                    [ngModel]=\"cliente.id\" name=\"id\"/>\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Data Cadastro:</label>\n                    <input type=\"text\" class=\"form-control\" disabled=\"true\" \n                    [ngModel]=\"cliente.dataCadastro\" name=\"dataCadastro\"/>\n                </div>\n        </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Nome: *</label>\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.nome\" name=\"nome\"/>\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Cpf: *</label>\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"cliente.cpf\" name=\"cpf\" />\n                </div>\n            </div>\n        </div>\n\n\n<div class=\"row\">\n    <div class=\"col-md-3\">\n            <button class=\"btn btn-success\" type=\"submit\" *ngIf=\"!cliente.id\">\n                <i class=\"fa fa-save\"></i> Salvar\n            </button>\n            <button class=\"btn btn-primary\" type=\"submit\" *ngIf=\"cliente.id\">\n                <i class=\"fa sync-alt\"></i> Atualizar\n            </button>\n\n            <button class=\"btn btn-warning ml-1\" (click)=\"voltar()\">\n                <i class=\"fa fa-arrow-left\"></i> Voltar\n            </button>\n    </div>\n</div>\n    </form>\n</div>  ","import { Component, OnInit } from '@angular/core';\nimport { Cliente } from '../cliente';\nimport { ClientesService } from 'src/app/clientes.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clientes-list',\n  templateUrl: './clientes-list.component.html',\n  styleUrls: ['./clientes-list.component.css']\n})\nexport class ClientesListComponent implements OnInit {\n\n  clientes: Cliente[] = [];\n  clienteSelecionado: Cliente;\n\n  constructor(private service: ClientesService, private router: Router) { }\n\n  ngOnInit(): void {\n\n   this.carregarClientes();\n  }\n\n  cadastrarCliente() {\n    this.router.navigate(['/clientes/form']);\n  }\n\n  preDelete(cliente: Cliente) {\n    this.clienteSelecionado = cliente\n  }\n\n  deletarCliente(){\n    this.service.deletar(this.clienteSelecionado.id)\n     .subscribe(resposta => {\n      console.log(\"cliente \"+this.clienteSelecionado.nome+\" deletado com sucesso!\");\n      this.carregarClientes();\n     })\n  }\n\n  carregarClientes(){\n    this.service.getClientes()\n    .subscribe(resposta => {\n      this.clientes = resposta;\n    }),\n    erro => {\n      console.log('erro ao tentar carregar os clientes.')\n    }\n  }\n\n}\n","<h1 class=\"mt-4\">Clientes</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Consulta</li>\n</ol>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-primary\" (click)=\"cadastrarCliente()\">\n                <i class=\"fa fa-plus\"></i>Novo</button>\n        </div>\n    </div>\n    <br>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n    <table class=\"table table-condensed table-hover\">\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>DATA_CADASTRO</th>\n                <th>NOME</th>\n                <th>CPF</th>\n                <th></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let cliente of clientes\">\n                 <td>{{ cliente.id }}</td>\n                 <td>{{ cliente.dataCadastro }}</td>\n                 <td>{{ cliente.nome }}</td>\n                 <td>{{ cliente.cpf }}</td>\n                 <td>\n                    <button class=\"btn btn-primary\" routerLink=\"/clientes-form/{{cliente.id}}\">\n                        <i class=\"fa fa-edit\"></i>\n                    </button>\n                    <button class=\"btn btn-danger ml-1\" \n                    (click)=\"preDelete(cliente)\"\n                    data-toggle=\"modal\" \n                    data-target=\"#deleteModal\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                 </td>\n            </tr>\n        </tbody>\n    </table>\n        </div>\n    </div>\n\n    <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4>Confirmação</h4>\n                </div>\n\n                <div class=\"modal-body\" *ngIf=\"clienteSelecionado\">\n                  Deseja deletar o(a) cliente.: {{ clienteSelecionado.nome }} ?\n                </div>\n\n                <div class=\"modal-footer\">\n                    <button class=\"btn btn-success\" \n                    (click)=\"deletarCliente()\" \n                    data-dismiss=\"modal\">Confirmar\n                </button>\n                    <button class=\"btn btn-warning\" data-dismiss=\"modal\" >Cancelar</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\nimport { ClientesListComponent } from './clientes-list/clientes-list.component';\nimport { LayoutComponent } from '../layout/layout.component';\n\n\nconst routes: Routes = [\n    { path: 'clientes', component: LayoutComponent, children: [\n    { path: 'form', component: ClientesFormComponent },\n    { path: 'form/:id', component: ClientesFormComponent },\n    {path: 'list', component: ClientesListComponent},\n    {path:'', redirectTo: 'clientes/list', pathMatch: 'full'}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientesRoutingModule } from './clientes-routing.module';\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { ClientesListComponent } from './clientes-list/clientes-list.component';\n\n\n@NgModule({\n  declarations: [ClientesFormComponent, ClientesListComponent],\n  imports: [\n    CommonModule,\n    ClientesRoutingModule,\n    FormsModule\n  ],\n  exports: [\n    ClientesFormComponent,\n    ClientesListComponent\n  ]\n})\nexport class ClientesModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-4\">Home</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Bem vindo</li>\n</ol>","import { AfterViewInit, Component, OnInit } from '@angular/core';\n\nimport jQuery from 'jquery';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor() { }\n\n\n  ngAfterViewInit(): void {\n    (function ($) {\n      \"use strict\";\n\n      // Add active state to sidbar nav links\n      var path = window.location.href; // because the 'href' property of the DOM element is the absolute path\n      $(\"#layoutSidenav_nav .sb-sidenav a.nav-link\").each(function () {\n        if (this.href === path) {\n          $(this).addClass(\"active\");\n        }\n      });\n\n      // Toggle the side navigation\n      $(\"#sidebarToggle\").on(\"click\", function (e) {\n        e.preventDefault();\n        $(\"body\").toggleClass(\"sb-sidenav-toggled\");\n      });\n    })(jQuery);\n  }\n\n}\n","<app-navbar></app-navbar>\n<div id=\"layoutSidenav\">\n    <app-sidebar></app-sidebar>\n    <div id=\"layoutSidenav_content\">\n        <main>\n            <div class=\"container-fluid px-4\">\n            <router-outlet></router-outlet>\n            </div>\n            <footer class=\"py-4 bg-light mt-auto\">\n                <div class=\"container-fluid px-4\">\n                    <div class=\"d-flex align-items-center justify-content-between small\">\n                        <div class=\"text-muted\">Copyright &copy; Clientes App 2025</div>\n                        <div>\n                            <a href=\"#\">Privacy Policy</a>\n                            &middot;\n                            <a href=\"#\">Terms &amp; Conditions</a>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </main>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userName: string;\n  password: string;\n  loginError: boolean;\n  cadastrando: boolean;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    console.log(`User: ${this.userName} - Password: ${this.password}`);\n    this.router.navigate(['/home']);\n  }\n\n  preCadastro(event){\n    event.preventDefault();\n    this.cadastrando = true;\n  }\n\n  cancelaCadastro(){\n    this.cadastrando = false;\n  }\n\n}\n","<div id=\"layoutAuthentication\">\n    <div id=\"layoutAuthentication_content\">\n        <main>\n            <div class=\"container\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-lg-5\">\n                        <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n                            <div class=\"card-header\">\n                                <h3 class=\"text-center font-weight-light my-4 \">\n                                    {{ cadastrando? 'Cadastro de novo usuário' : 'Login' }}\n                                </h3>\n                            </div>\n                            \n                            <div class=\"card-body\">\n                                <div class=\"alert alert-danger\" *ngIf=\"loginError\">\n                                    Login e/ou Senha Incorreto(s)\n                                </div>\n\n                                \n                            <form #loginForm=\"ngForm\" (submit)=\"onSubmit()\">\n                                <div class=\"form-group\">\n                                    <label class=\"small mb-1 \">Login</label>\n                                    <input type=\"text\" name=\"userName\" \n                                    [(ngModel)]=\"userName\" \n                                    class=\"form-control py-4\"\n                                    placeholder=\"Digite Seu Login\">\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label class=\"small mb-1 \">Senha</label>\n                                    <input type=\"password\" name=\"password\" \n                                    [(ngModel)]=\"password\" \n                                    class=\"form-control py-4\"\n                                    placeholder=\"Digite Sua senha\">\n                                </div>\n\n                                <div class=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                    <button class=\"btn btn-primary\" type=\"submit\" *ngIf=\"!cadastrando\">Entrar</button>\n                                    <button class=\"btn btn-success\" type=\"button\" *ngIf=\"cadastrando\">Cadastar</button>\n                                    <button (click)=\"cancelaCadastro()\" class=\"btn btn-danger\" type=\"button\" *ngIf=\"cadastrando\">Cancelar</button>\n                                </div>\n                            </form>\n                            </div>\n\n                            <div class=\"card-footer text-center\">\n                                <div class=\"small\">\n                                    <a (click)=\"preCadastro($event)\" href=\"#\">\n                                        Não possui usuário? Cadastre-se!\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n    </div>\n</div>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Servico } from './servico/servico';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { servicoBusca } from './servico/servicoBusca';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicoService {\n  apiURL: string = environment.apiURLBase + '/api/servicos';\n\n  constructor(private http: HttpClient) { }\n\n  salvar(servico: Servico): Observable<Servico> {\n    return this.http.post<Servico>(this.apiURL, servico);\n  }\n\n    getServicos(): Observable<Servico[]> {\n      return this.http.get<Servico[]>(this.apiURL+'/list');  \n    }\n\n    buscar(nome: string, mes: number): Observable<servicoBusca[]>{\n      const httpParams = new HttpParams().set(\"nome\", nome).set(\"mes\", mes ? mes.toString() : '');\n      \n      const url = this.apiURL + \"?\" + httpParams.toString();\n\n      console.log('URL= ',url);\n      return this.http.get<any>(url);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ClientesService } from 'src/app/clientes.service';\nimport { Cliente } from 'src/app/clientes/cliente';\nimport { Servico } from '../servico';\nimport { Router } from '@angular/router';\nimport { ServicoService } from 'src/app/servico.service';\n\n@Component({\n  selector: 'app-servico-form',\n  templateUrl: './servico-form.component.html',\n  styleUrls: ['./servico-form.component.css']\n})\nexport class ServicoFormComponent implements OnInit {\n\n  clientes: Cliente[] = [];\n  servico: Servico;\n\n  constructor(\n    private clienteService: ClientesService,\n    private router: Router,\n    private servicoService: ServicoService\n  ) { \n\n    this.servico = new Servico();\n  }\n\n  ngOnInit(): void {\n   this.carregarClientes();\n   }\n\n  carregarClientes(){\n    this.clienteService.getClientes()\n    .subscribe(resposta => {\n      this.clientes = resposta;\n    })\n  }\n\n  onSubmit(){\n    console.log(this.servico);\n    this.servicoService.salvar(this.servico)\n    .subscribe(resposta => {\n      this.voltar();\n      console.log('cadastro efetuado com sucesso.')\n    })\n  }\n\n  voltar() {\n    this.router.navigate(['/servicos/list']);\n  }\n}\n","<h1 class=\"mt-4\">Serviços</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Cadastro</li>\n</ol>\n\n<div class=\"container\">\n<div class=\"row\">\n    <form #servicoForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label>Cliente:</label>\n                <select class=\"form-control\" \n                [ngModelOptions]=\"{standalone: true}\"\n                [(ngModel)]=\"servico.idCliente\">\n                 <option value=\"\">Selecione...</option>\n                 <option *ngFor=\"let cliente of clientes\" [ngValue]=\"cliente.id\">\n                 {{ cliente.nome }}\n                 </option>\n                </select>\n              </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label>Descrição:</label>\n                    <input class=\"form-control\"\n                    [(ngModel)]=\"servico.descricao\" \n                    type=\"text\" name=\"descricao\" \n                    id=\"inputDescricao\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Valor:</label>\n                    <input class=\"form-control\"\n                    [(ngModel)]=\"servico.valor\" \n                    type=\"text\" name=\"valor\" \n                    id=\"inputValor\">\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Data:</label>\n                    <input class=\"form-control\"\n                    [(ngModel)]=\"servico.data\" \n                    type=\"text\" name=\"data\" \n                    id=\"inputData\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col md-3\">\n                <button class=\"btn btn-success\" type=\"submit\" *ngIf=\"!servico.id\">\n                    <i class=\"fa fa-save\"></i> Salvar\n                </button>\n                <button class=\"btn btn-primary\" type=\"submit\" *ngIf=\"servico.id\">\n                    <i class=\"fa sync-alt\"></i> Atualizar\n                </button>\n    \n                <button class=\"btn btn-warning ml-1\" (click)=\"voltar()\">\n                    <i class=\"fa fa-arrow-left\"></i> Voltar\n                </button>\n            </div>\n        </div>\n    </form>\n</div>  \n</div>  ","import { Component, OnInit } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { ServicoService } from 'src/app/servico.service';\nimport { Servico } from '../servico';\nimport { servicoBusca } from '../servicoBusca';\n\n@Component({\n  selector: 'app-servico-list',\n  templateUrl: './servico-list.component.html',\n  styleUrls: ['./servico-list.component.css']\n})\nexport class ServicoListComponent implements OnInit {\n\n  lista: servicoBusca[];\n\n  servicos: Servico[] = [];\n  servicoSelecionado: Servico;\n  nome: string;\n  mes: number;\n  meses: number[];\n\n  constructor(private router: Router, private servicoService: ServicoService             \n  ) { \n    this.meses = [1,2,3,4,5,6,7,8,9,10,11,12];\n  }\n\n  ngOnInit(): void {\n    this.carregarServicos();\n  }\n\n  cadastrarServico(){\n      this.router.navigate(['/servicos/form']);  \n  }\n\n  carregarServicos(){\n    this.servicoService.getServicos()\n    .subscribe(resposta => {\n      this.servicos = resposta;\n    }),\n    erro => {\n      console.log('erro ao tentar carregar os servicos.')\n    }\n  }\n\n    preDelete(servico: Servico) {\n      this.servicoSelecionado = servico;\n    }\n\n    consultar(){\n      if((this.nome == undefined && this.mes == undefined) && (this.nome == '' && this.mes == null)){\n        console.log('nome= ', this.nome, ' mes = ',this.mes );\n        this.carregarServicos();\n        return;\n      }\n      this.servicoService.buscar(this.nome, this.mes)\n      .subscribe(resposta => {\n        this.lista = resposta;\n        console.log(this.lista);\n        this.populaBusca(this.lista);\n      })\n    }\n\n    populaBusca(list: servicoBusca[]){\n      let servicosCarregados: Servico[] = [];\n      let servicoModel: Servico = new Servico;\n      \n      list.forEach( item => {\n           servicoModel.descricao = item.descricao;\n           servicoModel.data = item.data;\n           servicoModel.valor = item.valor.toString();\n           servicoModel.idCliente = item.cliente.id;\n\n           servicosCarregados.push(servicoModel);\n      })\n\n      this.servicos = servicosCarregados;\n    }\n\n}\n","<h1 class=\"mt-4\">Serviços</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Consulta</li>\n</ol>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-2\">\n            <button class=\"btn btn-primary\" (click)=\"cadastrarServico()\">\n                <i class=\"fa fa-plus\"></i>Novo</button>\n        </div>\n    </div>\n    <form #consultaForm=\"ngForm\" (submit)=\"consultar()\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <label for=\"inputNome\">Nome do Cliente.:</label>\n                <input type=\"text\" id=\"inputNome\" name=\"nome\" [(ngModel)]=\"nome\" class=\"form-controls\">\n            </div>\n            <div class=\"col-md-6\">\n                <label for=\"inputMes\">Mês.:</label>\n                <select name=\"\" id=\"\" [(ngModel)]=\"mes\" class=\"form-control\" name=\"mes\">\n                    <option value=\"\">Selecione...</option>\n                    <option *ngFor=\"let mes of meses\" [value]=\"mes\">\n                        {{ mes }}\n                    </option>\n                </select>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-warning\">\n                    <i class=\"fa fa-search\"></i> Consultar\n                </button>\n            </div>\n        </div>\n    </form>\n</div>\n\n<br>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n    <table class=\"table table-condensed table-hover\">\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>DESCRIÇÃO</th>\n                <th>VALOR</th>\n                <th>DATA</th>\n                <th>CLIENTE</th>\n                <th></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let servico of servicos\">\n                 <td>{{ servico.id }}</td>\n                 <td>{{ servico.descricao }}</td>\n                 <td>{{ servico.valor }}</td>\n                 <td>{{ servico.data }}</td>\n                 <td>{{ servico.cliente.nome }}</td>\n                 <td>\n                    <button class=\"btn btn-primary\" routerLink=\"/servicos-form/{{servico.id}}\">\n                        <i class=\"fa fa-edit\"></i>\n                    </button>\n                    <button class=\"btn btn-danger ml-1\" \n                    (click)=\"preDelete(servico)\"\n                    data-toggle=\"modal\" \n                    data-target=\"#deleteModal\">\n                        <i class=\"fa fa-trash\"></i>\n                    </button>\n                 </td>\n            </tr>\n        </tbody>\n    </table>\n        </div>\n    </div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ServicoFormComponent } from './servico-form/servico-form.component';\nimport { ServicoListComponent } from './servico-list/servico-list.component';\nimport { LayoutComponent } from '../layout/layout.component';\n\n\nconst routes: Routes = [\n  {path: 'servicos', component: LayoutComponent, children: [\n    {path:'form', component: ServicoFormComponent},\n    {path: 'list', component: ServicoListComponent},\n    {path:'', redirectTo: 'servicos/list', pathMatch: 'full'}\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServicoRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ServicoRoutingModule } from './servico-routing.module';\nimport { ServicoFormComponent } from './servico-form/servico-form.component';\nimport { ServicoListComponent } from './servico-list/servico-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [ServicoFormComponent, ServicoListComponent],\n  imports: [\n    CommonModule,\n    ServicoRoutingModule,\n    FormsModule,\n    RouterModule\n  ],\n  exports: [\n    ServicoFormComponent,\n    ServicoListComponent\n  ]\n})\nexport class ServicoModule { }\n","import { Cliente } from \"../clientes/cliente\";\r\n\r\nexport class Servico {\r\n    id: number;\r\n    descricao: string;\r\n    valor: string;\r\n    data: string;\r\n    idCliente: number;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n    <a class=\"navbar-brand ps-3\" href=\"#\">Clientes-App</a>\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0\" \n          id=\"sidebarToggle\" href=\"#!\">\n          <i class=\"fas fa-bars\"></i>\n    </button>\n\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"layoutSidenav_nav\">\n<nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\n    <div class=\"sb-sidenav-menu\">\n        <div class=\"nav\">\n            <div class=\"sb-sidenav-menu-heading\">Sistema</div>\n            <a class=\"nav-link\" routerLink=\"/home\">\n                <div class=\"sb-nav-link-icon\"><i class=\"fas fa-tachometer-alt\"></i></div>\n                Home\n            </a>\n            <div class=\"sb-sidenav-menu-heading\">Cadastros</div>\n            <a class=\"nav-link collapsed\" routerLink=\"/clientes/list\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\n                <div class=\"sb-nav-link-icon\"><i class=\"fas fa-columns\"></i></div>\n                Clientes\n            </a>\n            <a class=\"nav-link collapsed\" routerLink=\"/servicos/list\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\n                <div class=\"sb-nav-link-icon\"><i class=\"fas fa-columns\"></i></div>\n                Serviços\n            </a>\n        </div>\n    </div>\n    <div class=\"sb-sidenav-footer\">\n        <div class=\"small\">Logged in as:</div>\n        Start Bootstrap\n    </div>\n  </nav>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [NavbarComponent, SidebarComponent],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    NavbarComponent,\n    SidebarComponent\n  ]\n})\nexport class TemplateModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURLBase: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}